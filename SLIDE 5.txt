const int ledPin1 = 2; // LED on digital pin 2 - Blinks at 1 Hz
const int ledPin2 = 3; // LED on digital pin 3 - Fades in and out over 5 seconds
const int ledPin4 = 5; // New LED on digital pin 5
const int ledPin5 = 6; // New LED on digital pin 6
const int ledPin6 = 7; // New LED on digital pin 7

unsigned long previousMillis1 = 0; // Stores last update time for LED 1
unsigned long previousMillis2 = 0; // Stores last update time for LED 2
unsigned long previousMillis3 = 0; // Stores last update time for the ordered LEDs

const long interval1 = 500;  // Interval at which to blink LED 1 (milliseconds)
const long interval2 = 20;   // Interval at which to update the fade for LED 2 (milliseconds)
const long interval3 = 2000; // Interval at which to turn on each of the ordered LEDs (milliseconds)

int brightness2 = 0;         // Current brightness of LED 2
int fadeAmount = 1;         // Amount to fade LED 2 by each step (255/5s*10ms)

int currentOrderedLED = 4;   // Start with LED on pin 4


void setup() {
  pinMode(ledPin1, OUTPUT);
  pinMode(ledPin2, OUTPUT);
  pinMode(ledPin4, OUTPUT);
  pinMode(ledPin5, OUTPUT);
  pinMode(ledPin6, OUTPUT);
}

void loop() {
  unsigned long currentMillis = millis(); // Grab the current time

  // Handle LED 1 (Blinking at 1Hz)
  if (currentMillis - previousMillis1 >= interval1) {
    previousMillis1 = currentMillis; // Save the last time you blinked the LED
    digitalWrite(ledPin1, !digitalRead(ledPin1)); // Toggle LED 1 state
  }

  // Handle LED 2 (Fade in and out)
  if (currentMillis - previousMillis2 >= interval2) {
    previousMillis2 = currentMillis; // Save the last time you updated the LED
    analogWrite(ledPin2, brightness2);
    brightness2 += fadeAmount;
    // Reverse the direction of the fading at the ends of the fade
    if (brightness2 <= 0 || brightness2 >= 255) {
      brightness2 = constrain(brightness2, 0, 255);
      fadeAmount = -fadeAmount; // Reverse direction
    }
  }

  // Handle LEDs 4, 5, and 6 (shine in order)
  if (currentMillis - previousMillis3 >= interval3) {
    // Turn off all ordered LEDs
    digitalWrite(ledPin4, LOW);
    digitalWrite(ledPin5, LOW);
    digitalWrite(ledPin6, LOW);

    // Turn on the current LED
    digitalWrite(currentOrderedLED, HIGH);

    // Move to the next LED, wrap around after LED 6
    currentOrderedLED++;
    if (currentOrderedLED > 7) {
      currentOrderedLED = 5;
    }

    // Save the last time the ordered LED was updated
    previousMillis3 = currentMillis;
  }
}