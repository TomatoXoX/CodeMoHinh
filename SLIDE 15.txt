const int ledPins[] = {3, 5, 6, 9, 10, 11}; // Update your LED pins here
const int numLeds = sizeof(ledPins) / sizeof(ledPins[0]);

struct LedState {
  int brightness;
  int fadeAmount;
  unsigned long previousMillis;
  unsigned long brightenDuration;
  unsigned long darkenDuration;
  unsigned long interval;
};

LedState leds[numLeds];

void setup() {
  for (int i = 0; i < numLeds; ++i) {
    pinMode(ledPins[i], OUTPUT);
    leds[i].brightness = 0; // Start with LEDs off
    leds[i].fadeAmount = 1; // Start with brightening
    leds[i].previousMillis = 0; // Initialize timer


  }
 // Set up the pins A0 to A3
  pinMode(A0, OUTPUT);
  pinMode(A1, OUTPUT);

  // Turn on the LEDs connected to A0 to A3
  digitalWrite(A0,HIGH);
  digitalWrite(A1,HIGH);

  // Manually configure the brighten and darken durations for each LED
  // LED 1 and 2
  leds[0].brightenDuration = 10000; // 10 seconds to brighten
  leds[0].darkenDuration = 4000; // 4 seconds to darken
  leds[1].brightenDuration = 10000; // 10 seconds to brighten
  leds[1].darkenDuration = 4000; // 4 seconds to darken

  // LED 5 and 6
  leds[2].brightenDuration = 6000; // 6 seconds to brighten
  leds[2].darkenDuration = 15000; // 15 seconds to darken
  leds[3].brightenDuration = 6000; // 6 seconds to brighten
  leds[3].darkenDuration = 15000; // 15 seconds to darken

  // LED 7 and 8
  leds[4].brightenDuration = 4000; // 4 seconds to brighten
  leds[4].darkenDuration = 10000; // 10 seconds to darken
  leds[5].brightenDuration = 4000; // 4 seconds to brighten
  leds[5].darkenDuration = 10000; // 10 seconds to darken
}

void loop() {
  for (int i = 0; i < numLeds; ++i) {
    updateLedBrightness(ledPins[i], &leds[i]);
  }
}

void updateLedBrightness(int ledPin, LedState* ledState) {
  unsigned long currentMillis = millis();
  ledState->interval = ledState->fadeAmount > 0 ? ledState->brightenDuration : ledState->darkenDuration;

  if (currentMillis - ledState->previousMillis >= ledState->interval / 255) {
    ledState->previousMillis = currentMillis;
    ledState->brightness += ledState->fadeAmount;
    
    // Check for the end of the fade cycle and reverse direction
    if (ledState->brightness <= 0 || ledState->brightness >= 255) {
      ledState->fadeAmount = -ledState->fadeAmount; // Reverse the fade direction
    }
    
    // Write the new brightness to the LED.
    analogWrite(ledPin, ledState->brightness);
  }
}